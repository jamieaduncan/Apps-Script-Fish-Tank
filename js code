//define sheets and board mapping
var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Sheet1");
var tank = sheet.getRange(1,1,10,10).getValues();
function placeRLFish(){
  let rowR = Math.floor(Math.random()*10);
  let columnR =Math.floor(Math.random()*10);
  if(tank[rowR][columnR] !== ''|| columnR === 9){
    placeRLFish();
  } else{sheet.getRange(1+rowR,1+columnR).setValue('R')};
};  
function placeUDFish(){
  let rowR = Math.floor(Math.random()*10);
  let columnR = Math.floor(Math.random()*10);
  if(tank[rowR][columnR] !== '' || rowR === 9){
    placeUDFish();
  } else{sheet.getRange(1+rowR,1+columnR).setValue('D')};
}; 
function move(){
  console.log(tank);
  let irFish = []; let ilFish = []; let iuFish = []; let idFish = [];
  let rFish = []; let lFish = []; let uFish = []; let dFish = []; 
  let names =['rFish','lFish','dFish','uFish']
  //Loop through tank array, goes through for each fish, maps it, checks for collisions against already moved fishes
  for(let x=0;x<5;x++){
    name = names[x];
    for(let i=0;i<tank.length;i++){
      for(let j=0;j<tank.length;j++){
        if(tank[i][j] === 'R'&& name === 'rFish'){
          irFish.push([i,j]);
          let col=j+1;
          rFish.push([i,col]);
        } else if(tank[i][j] === 'L'&& name === 'lFish'){
          ilFish.push([i,j]);
          let col2=j-1;
          if(collision(i,col2,rFish)){
            lFish.push([i,j]);
          } else{
            lFish.push([i,col2]);
          };
        } else if(tank[i][j] === 'D'&& name === 'dFish'){
          idFish.push([i,j]);
          let r2=i+1;
          if(collision(r2,j,rFish) || collision(r2,j,lFish)){
            dFish.push([i,j]);
          } else{
            dFish.push([r2,j]);
          };
        } else if(tank[i][j] === 'U'&& name === 'uFish'){
          iuFish.push([i,j]);
          let r1=i-1;
          if(collision(r1,j,rFish) || collision(r1,j,lFish) || collision(r1,j,dFish)){
            uFish.push([i,j]);
          } else{
            uFish.push([r1,j]);
          };
        };
      };
    };
  };
  //check for cells that didn't move, if they match to anything in the new values, then have that one pause too
  pausedCollision(rFish,irFish,lFish,uFish,dFish);
  pausedCollision(lFish,ilFish,rFish,uFish,dFish);
  pausedCollision(uFish,iuFish,rFish,lFish,dFish);
  pausedCollision(dFish,idFish,rFish,lFish,uFish);
  //When fish in same column hit eachotehr
  for(let i=0;i<tank.length;i++){
    for(let j=0;j<tank.length;j++){
      if(tank[i][j] === 'R'){
        let col=j+1;
        if(tank[i][col] === 'L'){
          rFish.push([i,col]);
        };
      // } else if(tank[i][j] === 'L'&& name === 'lFish'){
      //   let col2=j-1;
      //   if(tank[i][col2] === 'R'){
      //     lFish.push([i,col2]);
      //   };
      } else if(tank[i][j] === 'D'){
        let r2=i+1;
        if(tank[r2][j] === 'U'){
          dFish.push([r2,j]);
        };
      // } else if(tank[i][j] === 'U'&& name === 'uFish'){
      //   let r1=i-1;
      //   if(tank[r1][j] === 'D'){
      //     uFish.push([r1,j]);
        };
      };
  };
  //if same row hits a paused item
  console.log(irFish,'u:',iuFish,'d',idFish,'l',ilFish);
  console.log(rFish,'u:',uFish,'d',dFish,'l',lFish);
  sheet.getRange(1,1,10,10).clearContent();
  //place fish
  placeFish(rFish,'rFish');
  placeFish(lFish,'lFish');
  placeFish(uFish,'uFish');
  placeFish(dFish,'dFish');
};


//Will return true if there is a collision
function collision(row,column,array){
  for(let x=0;x<array.length;x++){
    if(array[x][0] === row && array[x][1]=== column){
      return true
    }
  } return false
};

function pausedCollision(array,firstarray,prFish,plFish,puFish){
  for(let i=0;i<array.length;i++){
    if(collision(array[i][0],array[i][1],prFish) || collision(array[i][0],array[i][1],plFish) 
    || collision(array[i][0],array[i][1],puFish)){
      array[i] = firstarray[i];
    };
  };
};

//function that will replace all the fish with the new array coordinates
function placeFish(arr,name){
  for(let i=0;i<arr.length;i++){
    if(arr[i][1]!==9 && name === 'rFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('R');
    } else if(arr[i][1]===9 && name === 'rFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('L');
    } else if(arr[i][1]!==0 && name === 'lFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('L');
    } else if(arr[i][1]===0 && name === 'lFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('R');
    } else if(arr[i][0]!==9 && name === 'dFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('D');
    } else if(arr[i][0]===9 && name === 'dFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('U');
    } else if(arr[i][0]!==0 && name === 'uFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('U');
    } else if(arr[i][0]===0 && name === 'uFish'){
      sheet.getRange(1+arr[i][0],1+arr[i][1]).setValue('D');
    };
  };
};

function test(){
  var data = [[1,2], [1,1], [2,0], [1,2], [1,1]];
  var dataUnique = data.reduce(function (out, item) {
    return out.concat(out.filter(function (comp) {
      return item.toString() == comp.toString();
    }).length ? [] : [item])
  }, []);
  console.log(data, dataUnique);

}
